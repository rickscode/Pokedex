{"ast":null,"code":"var _jsxFileName = \"/Users/rickyhartley/Desktop/code_your_future/react/Pokedex/src/CaughtPokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import array of all Pokemon\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst pokemon = require(\"pokemon\");\n\nconst CaughtPokemon = () => {\n  _s();\n\n  const date = new Date().toLocaleString(); // use State functionality to update pokemon caught\n\n  const [caught, setCaught] = useState([]);\n\n  function catchPokemon() {\n    setCaught(caught.concat(pokemon.random()));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: catchPokemon,\n      children: \"Catch Pokemon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Caught \", caught.length, \" Pokemon on \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: caught.map((pokemon, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pokemon\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaughtPokemon, \"0kqYNYussB1oAOvqIhK/0poZgoY=\");\n\n_c = CaughtPokemon;\nexport default CaughtPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaughtPokemon\");","map":{"version":3,"sources":["/Users/rickyhartley/Desktop/code_your_future/react/Pokedex/src/CaughtPokemon.js"],"names":["React","useState","pokemon","require","CaughtPokemon","date","Date","toLocaleString","caught","setCaught","catchPokemon","concat","random","length","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAb,CADwB,CAExB;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASS,YAAT,GAAwB;AACtBD,IAAAA,SAAS,CAACD,MAAM,CAACG,MAAP,CAAcT,OAAO,CAACU,MAAR,EAAd,CAAD,CAAT;AACD;;AACD,sBACA;AAAA,4BAEA;AAAQ,MAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,4BAAWF,MAAM,CAACK,MAAlB,kBAAsCR,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA,gBAAKG,MAAM,CAACM,GAAP,CAAW,CAACZ,OAAD,EAAUa,KAAV,kBACd;AAAA,kBAAiBb;AAAjB,SAASa,KAAT;AAAA;AAAA;AAAA;AAAA,cADG;AAAL;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUD,CAlBH;;GAAMX,a;;KAAAA,a;AAoBJ,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\n// import array of all Pokemon\nconst pokemon = require(\"pokemon\");\n\nconst CaughtPokemon = () => {\n    const date = new Date().toLocaleString();\n    // use State functionality to update pokemon caught\n    const [caught, setCaught] = useState([]);\n\n    function catchPokemon() {\n      setCaught(caught.concat(pokemon.random()));\n    }\n    return (\n    <div>\n      {/*Onclick call the function and update caught variable by one */}\n    <button onClick={catchPokemon}>Catch Pokemon!</button>\n    <p>Caught {caught.length} Pokemon on {date}</p>\n    <ul>{caught.map((pokemon, index) => (\n      <li key={index}>{pokemon}</li>\n    ))}</ul>\n   </div>\n    );\n  };\n\n  export default CaughtPokemon;"]},"metadata":{},"sourceType":"module"}