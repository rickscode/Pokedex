{"ast":null,"code":"var _jsxFileName = \"/Users/rickyhartley/Desktop/code_your_future/react/Pokedex/src/CaughtPokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import array of all Pokemon\n// const pokemon = require(\"pokemon\");\n//pokemon.random()\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CaughtPokemon = () => {\n  _s();\n\n  const date = new Date().toLocaleString(); // use State functionality to update pokemon caught\n\n  const [caught, setCaught] = useState([]);\n  const [pokemonNameInput, setPokemonNameInput] = useState(\"\");\n\n  function catchPokemon() {\n    setCaught(caught.concat(pokemonNameInput));\n  }\n\n  function handleInputChange(event) {\n    setPokemonNameInput(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: pokemonNameInput,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: catchPokemon,\n      children: \"Catch Pokemon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Caught \", caught.length, \" Pokemon on \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: caught.map((pokemon, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pokemon\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaughtPokemon, \"zF598ssQqByYQgfaIoKc2pB8NKw=\");\n\n_c = CaughtPokemon;\nexport default CaughtPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaughtPokemon\");","map":{"version":3,"sources":["/Users/rickyhartley/Desktop/code_your_future/react/Pokedex/src/CaughtPokemon.js"],"names":["React","useState","CaughtPokemon","date","Date","toLocaleString","caught","setCaught","pokemonNameInput","setPokemonNameInput","catchPokemon","concat","handleInputChange","event","target","value","length","map","pokemon","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;AACA;;;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAb,CADwB,CAExB;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;;AAEA,WAASS,YAAT,GAAwB;AACtBH,IAAAA,SAAS,CAACD,MAAM,CAACK,MAAP,CAAcH,gBAAd,CAAD,CAAT;AACD;;AAED,WAASI,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCJ,IAAAA,mBAAmB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD;;AAGD,sBACA;AAAA,4BAEA;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,KAAK,EAAEP,gBAFP;AAGA,MAAA,QAAQ,EAAEI;AAHV;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAQ,MAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAA,4BAAWJ,MAAM,CAACU,MAAlB,kBAAsCb,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,eAQA;AAAA,gBAAKG,MAAM,CAACW,GAAP,CAAW,CAACC,OAAD,EAAUC,KAAV,kBACd;AAAA,kBAAiBD;AAAjB,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cADG;AAAL;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcD,CA9BH;;GAAMjB,a;;KAAAA,a;AAgCJ,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\n// import array of all Pokemon\n// const pokemon = require(\"pokemon\");\n//pokemon.random()\nconst CaughtPokemon = () => {\n    const date = new Date().toLocaleString();\n    // use State functionality to update pokemon caught\n    const [caught, setCaught] = useState([]);\n\n    const [pokemonNameInput, setPokemonNameInput] = useState(\"\");\n\n    function catchPokemon() {\n      setCaught(caught.concat(pokemonNameInput));\n    }\n\n    function handleInputChange(event) {\n      setPokemonNameInput(event.target.value);\n    }\n\n\n    return (\n    <div>\n      {/*Onclick call the function and update caught variable by one */}\n    <input\n    type=\"text\"\n    value={pokemonNameInput}\n    onChange={handleInputChange} />\n    <button onClick={catchPokemon}>Catch Pokemon!</button>\n    <p>Caught {caught.length} Pokemon on {date}</p>\n    <ul>{caught.map((pokemon, index) => (\n      <li key={index}>{pokemon}</li>\n    ))}</ul>\n   </div>\n    );\n  };\n\n  export default CaughtPokemon;"]},"metadata":{},"sourceType":"module"}