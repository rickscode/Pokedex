{"ast":null,"code":"'use strict';\n\nconst uniqueRandomArray = require('unique-random-array');\n\nconst pokemon = require('./data/en.json');\n\nconst repositoryUrl = 'https://github.com/sindresorhus/pokemon';\nconst reportText = `Please report to ${repositoryUrl}/issues if we missed something.`;\nconst languages = new Set(['de', 'en', 'fr', 'es', 'ja', 'ko', 'ru', 'th', 'zh-Hans', 'zh-Hant']);\nconst randomNameGenerators = new Map();\n\nfunction getLocalizedList(language = 'en') {\n  if (language === 'en') {\n    return pokemon;\n  }\n\n  if (!languages.has(language)) {\n    throw new Error(`Localized list for language code '${language}' does not exist. Pull request welcome: ${repositoryUrl}`);\n  }\n\n  return require(`./data/${language.toLowerCase()}.json`);\n}\n\nexports.all = getLocalizedList;\n\nexports.random = (language = 'en') => {\n  if (randomNameGenerators.has(language)) {\n    return randomNameGenerators.get(language)();\n  }\n\n  const list = getLocalizedList(language);\n  const random = uniqueRandomArray(list);\n  randomNameGenerators.set(language, random);\n  return random();\n};\n\nexports.getName = (id, language = 'en') => {\n  const list = getLocalizedList(language);\n  const name = list[id - 1];\n\n  if (!name) {\n    throw new Error(`Pokémon with ID '${id}' does not exist. ${reportText}`);\n  }\n\n  return name;\n};\n\nexports.getId = (name, language = 'en') => {\n  const list = getLocalizedList(language);\n  const index = list.indexOf(name);\n\n  if (index === -1) {\n    throw new Error(`Pokémon with name '${name}' does not exist for language code '${language}'. ${reportText}`);\n  }\n\n  return index + 1;\n};\n\nexports.languages = languages;","map":{"version":3,"sources":["/Users/rickyhartley/Desktop/code_your_future/react/Pokedex/node_modules/pokemon/index.js"],"names":["uniqueRandomArray","require","pokemon","repositoryUrl","reportText","languages","Set","randomNameGenerators","Map","getLocalizedList","language","has","Error","toLowerCase","exports","all","random","get","list","set","getName","id","name","getId","index","indexOf"],"mappings":"AAAA;;AACA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAAvB;;AAEA,MAAME,aAAa,GAAG,yCAAtB;AACA,MAAMC,UAAU,GAAI,oBAAmBD,aAAc,iCAArD;AAEA,MAAME,SAAS,GAAG,IAAIC,GAAJ,CAAQ,CACzB,IADyB,EAEzB,IAFyB,EAGzB,IAHyB,EAIzB,IAJyB,EAKzB,IALyB,EAMzB,IANyB,EAOzB,IAPyB,EAQzB,IARyB,EASzB,SATyB,EAUzB,SAVyB,CAAR,CAAlB;AAaA,MAAMC,oBAAoB,GAAG,IAAIC,GAAJ,EAA7B;;AAEA,SAASC,gBAAT,CAA0BC,QAAQ,GAAG,IAArC,EAA2C;AAC1C,MAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACtB,WAAOR,OAAP;AACA;;AAED,MAAI,CAACG,SAAS,CAACM,GAAV,CAAcD,QAAd,CAAL,EAA8B;AAC7B,UAAM,IAAIE,KAAJ,CAAW,qCAAoCF,QAAS,2CAA0CP,aAAc,EAAhH,CAAN;AACA;;AAED,SAAOF,OAAO,CAAE,UAASS,QAAQ,CAACG,WAAT,EAAuB,OAAlC,CAAd;AACA;;AAEDC,OAAO,CAACC,GAAR,GAAcN,gBAAd;;AAEAK,OAAO,CAACE,MAAR,GAAiB,CAACN,QAAQ,GAAG,IAAZ,KAAqB;AACrC,MAAIH,oBAAoB,CAACI,GAArB,CAAyBD,QAAzB,CAAJ,EAAwC;AACvC,WAAOH,oBAAoB,CAACU,GAArB,CAAyBP,QAAzB,GAAP;AACA;;AAED,QAAMQ,IAAI,GAAGT,gBAAgB,CAACC,QAAD,CAA7B;AACA,QAAMM,MAAM,GAAGhB,iBAAiB,CAACkB,IAAD,CAAhC;AACAX,EAAAA,oBAAoB,CAACY,GAArB,CAAyBT,QAAzB,EAAmCM,MAAnC;AAEA,SAAOA,MAAM,EAAb;AACA,CAVD;;AAYAF,OAAO,CAACM,OAAR,GAAkB,CAACC,EAAD,EAAKX,QAAQ,GAAG,IAAhB,KAAyB;AAC1C,QAAMQ,IAAI,GAAGT,gBAAgB,CAACC,QAAD,CAA7B;AACA,QAAMY,IAAI,GAAGJ,IAAI,CAACG,EAAE,GAAG,CAAN,CAAjB;;AAEA,MAAI,CAACC,IAAL,EAAW;AACV,UAAM,IAAIV,KAAJ,CAAW,oBAAmBS,EAAG,qBAAoBjB,UAAW,EAAhE,CAAN;AACA;;AAED,SAAOkB,IAAP;AACA,CATD;;AAWAR,OAAO,CAACS,KAAR,GAAgB,CAACD,IAAD,EAAOZ,QAAQ,GAAG,IAAlB,KAA2B;AAC1C,QAAMQ,IAAI,GAAGT,gBAAgB,CAACC,QAAD,CAA7B;AACA,QAAMc,KAAK,GAAGN,IAAI,CAACO,OAAL,CAAaH,IAAb,CAAd;;AAEA,MAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACjB,UAAM,IAAIZ,KAAJ,CAAW,sBAAqBU,IAAK,uCAAsCZ,QAAS,MAAKN,UAAW,EAApG,CAAN;AACA;;AAED,SAAOoB,KAAK,GAAG,CAAf;AACA,CATD;;AAWAV,OAAO,CAACT,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\nconst uniqueRandomArray = require('unique-random-array');\nconst pokemon = require('./data/en.json');\n\nconst repositoryUrl = 'https://github.com/sindresorhus/pokemon';\nconst reportText = `Please report to ${repositoryUrl}/issues if we missed something.`;\n\nconst languages = new Set([\n\t'de',\n\t'en',\n\t'fr',\n\t'es',\n\t'ja',\n\t'ko',\n\t'ru',\n\t'th',\n\t'zh-Hans',\n\t'zh-Hant'\n]);\n\nconst randomNameGenerators = new Map();\n\nfunction getLocalizedList(language = 'en') {\n\tif (language === 'en') {\n\t\treturn pokemon;\n\t}\n\n\tif (!languages.has(language)) {\n\t\tthrow new Error(`Localized list for language code '${language}' does not exist. Pull request welcome: ${repositoryUrl}`);\n\t}\n\n\treturn require(`./data/${language.toLowerCase()}.json`);\n}\n\nexports.all = getLocalizedList;\n\nexports.random = (language = 'en') => {\n\tif (randomNameGenerators.has(language)) {\n\t\treturn randomNameGenerators.get(language)();\n\t}\n\n\tconst list = getLocalizedList(language);\n\tconst random = uniqueRandomArray(list);\n\trandomNameGenerators.set(language, random);\n\n\treturn random();\n};\n\nexports.getName = (id, language = 'en') => {\n\tconst list = getLocalizedList(language);\n\tconst name = list[id - 1];\n\n\tif (!name) {\n\t\tthrow new Error(`Pokémon with ID '${id}' does not exist. ${reportText}`);\n\t}\n\n\treturn name;\n};\n\nexports.getId = (name, language = 'en') => {\n\tconst list = getLocalizedList(language);\n\tconst index = list.indexOf(name);\n\n\tif (index === -1) {\n\t\tthrow new Error(`Pokémon with name '${name}' does not exist for language code '${language}'. ${reportText}`);\n\t}\n\n\treturn index + 1;\n};\n\nexports.languages = languages;\n"]},"metadata":{},"sourceType":"script"}